include std::io

extern fn dlopen(path: *const i8, mode: i32) -> *const any
extern fn dlsym(lib: *const any, sym: *const i8) -> *const any
extern fn dlclose(lib: *const any) -> null

fn foo export no_mangle -> null {
    return println("FOOOOO" as *const [i8])
}

fn do(task: fn() -> null) -> null {
    return task()
}

fn main -> i32 {
    let lib = dlopen("./tests/fnptr\0" as *const i8, 1)

    defer {
        dlclose(lib)
    }

    let f = dlsym(lib, "foo\0" as *const i8) as fn() -> null

    do(f)

    return 0
}